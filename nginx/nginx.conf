events {}
http {
    server {
        listen 80;
        server_name localhost;
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        server_name localhost;
        # Path to your SSL certificates
        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/certs/localhost.key;
        
        # Proxy requests to your main web application
        location / {
            # Use the container name or host.docker.internal (on Docker Desktop)
            proxy_pass http://webapp:3000;  # Replace 'webapp' with your app container name
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Proxy requests to your Portainer application
        location /portainer/ {
            # Add trailing slash and rewrite paths
            proxy_pass https://portainer:9443/;  # Replace 'portainer' with container name
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Proxy requests to your OpenWebUI application
        location /openwebui/ {
            # Add trailing slash and rewrite paths
            proxy_pass http://openwebui:8080/;  # Replace 'openwebui' with container name
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}